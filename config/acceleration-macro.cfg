# Try to find the max acceleration - independant of deaccleration
# start with an accel/deaccel combo that works then push up acceleration while leaving deacceleration 
# once acceleration is found start pushing up deacceleration

[gcode_macro PRINTBED_LAP] 
gcode:
    G1 X5 Y{printer.toolhead.axis_maximum.y-5} F100000
    G1 X5 Y5  F100000
    G1 X{printer.toolhead.axis_maximum.x-5} Y5 F100000
    G1 X{printer.toolhead.axis_maximum.x-5} Y{printer.toolhead.axis_maximum.y-5} F100000
    G1 X5 Y{printer.toolhead.axis_maximum.y-5} F100000


[gcode_macro ACCEL_TEST] 
gcode:
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    {% set accel_to_decel = params.ACCEL_TO_DECEL|default(printer.configfile.settings.printer.max_accel_to_decel)|int %}
    {% set max_velocity = params.MAX_VELOCITY|default(printer.configfile.settings.printer.max_velocity)|int %}



    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=ACCEL_TEST
    G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
    G1 Z5 F100000
    
    # Output parameters to g-code terminal
    { action_respond_info("ACCEL_TEST: accel %d, accel_to_decel %d, max_velocity %d" % (accel, accel_to_decel, max_velocity)) }
    
    # Set new limits
    SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel_to_decel} MAX_VELOCITY={max_velocity}

    GET_POSITION
    PRINTBED_LAP
    GET_POSITION

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} MAX_VELOCITY={printer.configfile.settings.printer.max_velocity}

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=ACCEL_TEST

